# -*- coding: utf-8 -*-
"""atlas_model_test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11-yiFpePObNHmZ5SCerWlIRObZEXnr0V
"""

import numpy as np
from PIL import Image
import pandas as pd

import keras
import tensorflow as tf
from keras.models import load_model
from keras import backend as K

import data
import model
import utils
from keras_tta import TTA_ModelWrapper

from tqdm import tqdm

K.set_image_data_format('channels_last')


def load_val_image(data_path, idx):
    colors = ['red', 'green', 'blue']
    img = np.zeros(input_img_shape)
    for i, c in enumerate(colors):
        im = Image.open(data_path + '/' + idx + '_' + c + '.png')
        im_res = im.resize((input_img_shape[0], input_img_shape[1]), Image.ANTIALIAS)
        image_array = np.array(im_res.getdata()).reshape((input_img_shape[0], input_img_shape[1]))
        img[:,:,i] = image_array / 255.
        im.close()
    return np.array(img[:,:,:3])


input_img_shape = (512,512,3)

model = load_model('pretrained_model/inceptionv3_final.h5', custom_objects={'combine_loss':model.combine_loss})

#model.load_weights('pretrained_model/inceptionv3_weights_60epoch.h5')

tta_model = TTA_ModelWrapper(model)

submit = pd.read_csv('sample_submission.csv')

path = '../test'

predicted = []
for name in tqdm(submit['Id']):
    image = load_val_image(path, name)
    score_predict = tta_model.predict(image[np.newaxis])[0]
    label_predict = np.arange(28)[score_predict[0]>=0.3]
    print(label_predict)
    str_predict_label = ' '.join(str(l) for l in label_predict)
    predicted.append(str_predict_label)


submit['Predicted'] = predicted
submit.to_csv('submission.csv', index=False)
